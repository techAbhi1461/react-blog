{"version":3,"sources":["components/images/blogLogo.png","components/Nav.js","components/Posts.js","components/PostDetail.js","components/AuthorDetail.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","style","listStyle","color","textDecoration","to","Posts","PostsLinkStyle","fontSize","useEffect","fetchPosts","useState","postsData","setPostsData","a","fetch","data","json","postsFromAPI","map","post","id","title","PostDetail","match","postData","setPostData","author","setAuthor","comment","setComment","fetchPost","params","postFromAPI","userId","authorResponse","authorFromAPI","fetchAuthor","commentsResponse","commentsFromAPI","fetchComments","body","name","AuthorDetail","authorDetails","setAuthorDetails","fetchAuthorDetails","res","finalResponse","username","email","phone","website","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7a88057.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/blogLogo.3637b1dc.png\";","import React from 'react';\nimport './styleforcomponents/index.scss';\nimport Logo from './images/blogLogo.png';\nimport { Link } from 'react-router-dom';\n\n\nfunction Nav() {\n\n    const homeLinkStyle = {\n        listStyle: 'none',\n        color: 'rgba(0, 0, 0, 0.54)',\n        textDecoration: 'none'\n\n    }\n\n    return (\n        <div className=\"navigation\">\n            <ul>\n                {/* <Link to=\"/about\">\n                    <li>About</li>\n                </Link> */}\n                <li className=\"logo\">\n                    BloggersDream\n                </li>\n                <Link style={homeLinkStyle} to=\"/posts\">\n                    <li className=\"home-link\">Home</li>\n                </Link>\n            </ul>\n        </div>\n    );\n}\n\nexport default Nav;\n","import React, { useState, useEffect } from 'react';\nimport './styleforcomponents/index.scss';\nimport { Link } from 'react-router-dom';\n\nfunction Posts() {\n\n    const PostsLinkStyle = {\n        listStyle: 'none',\n        color: 'black',\n        textDecoration: 'none',\n        fontSize: '1.5rem'\n\n    }\n\n    // Using useEffect to run our fetPosts call only once when the component mounts\n    useEffect(() => {\n        fetchPosts();\n    }, []);\n\n    const [postsData, setPostsData] = useState([]);\n\n    // Fetching all the posts for our blog from API\n    const fetchPosts = async () => {\n\n        const data = await fetch('https://jsonplaceholder.typicode.com/posts');\n\n        const postsFromAPI = await data.json();\n\n        // console.log(postsFromAPI);\n\n        setPostsData(postsFromAPI);\n\n\n    }\n\n\n    return (\n        <div className=\"posts\">\n\n            <h1 className='posts-heading'>Featured Articles</h1>\n\n            {/* Mapping over all the posts we got from API to display the posts title */}\n            {postsData.map(post => (\n\n                <div className=\"each-post-section\">\n                    <div className=\"blog-image\">\n                    </div>\n                    <h1 key={post.title} className='each-post'>\n                        {/* Linking each title to a unique page named by its id */}\n                        <Link style={PostsLinkStyle} to={`/posts/${post.id}`}>Title: {post.title}</Link>\n                    </h1>\n                </div>\n            ))}\n\n        </div>\n    );\n}\n\nexport default Posts;\n","import React, { useState, useEffect } from 'react';\nimport './styleforcomponents/index.scss';\nimport { Link } from 'react-router-dom';\n\nexport default function PostDetail({ match }) {\n\n    const AuthorLinkStyle = {\n        listStyle: 'none',\n        color: 'black',\n        textDecoration: 'none'\n\n    }\n\n    const [postData, setPostData] = useState([]);\n    const [author, setAuthor] = useState('');\n    const [comment, setComment] = useState('');\n\n    // Using useEffect to run our fetPosts call only once when the component mounts\n    useEffect(() => {\n\n        fetchPost();\n    }, []);\n\n\n\n    // Fetching all the posts for our blog from API\n    const fetchPost = async () => {\n\n        const data = await fetch(`https://jsonplaceholder.typicode.com/posts/${match.params.id}`);\n\n        const postFromAPI = await data.json();\n\n        // console.log(postsFromAPI);\n\n        setPostData(postFromAPI);\n\n        // console.log(postData);\n    }\n\n    // Fetching the author of our post from the API\n    const fetchAuthor = async () => {\n\n\n        const authorResponse = await fetch(`https://jsonplaceholder.typicode.com/users/${postData.userId}`);\n\n        const authorFromAPI = await authorResponse.json();\n\n        // console.log(authorFromAPI);\n\n        setAuthor(authorFromAPI);\n\n\n    }\n\n    fetchAuthor();\n\n    // Fetching the comments of our post from the API\n    const fetchComments = async () => {\n\n\n        const commentsResponse = await fetch(`https://jsonplaceholder.typicode.com/comments/${postData.id}`);\n\n        const commentsFromAPI = await commentsResponse.json();\n\n        setComment(commentsFromAPI);\n\n\n    }\n\n    fetchComments();\n\n\n\n\n\n\n\n    return (\n\n        <div className=\"post-detail\">\n            <h1>{postData.title}</h1>\n            <p>{postData.body}</p>\n            {/* <Link to={`/author/${author.id}`}>Author is :{author.name}</Link> */}\n            <Link style={AuthorLinkStyle} to={`/author/${author.id}`}><h3>Author: {author.name}</h3></Link>\n            <h4>Comments: {comment.body}</h4>\n        </div>\n\n    );\n}\n","import React, { useState, useEffect } from 'react';\n\n\nexport default function AuthorDetail({ match }) {\n\n\n    const [authorDetails, setAuthorDetails] = useState({});\n\n    // Using useEffect to run our fetchAuthorDetails call only once when the component mounts\n    useEffect(() => {\n        fetchAuthorDetails();\n    }, []);\n\n    // Fetching all the details about the author from our API\n    const fetchAuthorDetails = async () => {\n\n        const res = await fetch(`https://jsonplaceholder.typicode.com/users/${match.params.id}`);\n\n        const finalResponse = await res.json();\n\n\n        setAuthorDetails(finalResponse);\n\n    }\n\n\n    // Fetching the author of our post from the API\n    // const fetchAuthor = async () => {\n\n\n    //     const authorResponse = await fetch(`https://jsonplaceholder.typicode.com/users/${postData.userId}`);\n\n    //     const authorFromAPI = await authorResponse.json();\n\n    // console.log(authorFromAPI);\n    //     console.log(authorFromAPI);\n\n    //     setAuthor(authorFromAPI);\n\n\n    // }\n\n    // fetchAuthor();\n\n\n\n\n    return (\n\n        <div className=\"author-detail\">\n            <h1>{authorDetails.name}</h1>\n            <h3>Username: {authorDetails.username}</h3>\n            <h3>Email: {authorDetails.email}</h3>\n            <h3>Phone: {authorDetails.phone} </h3>\n            <h3>Website: {authorDetails.website} </h3>\n\n        </div>\n\n    );\n}\n","import React from 'react';\nimport './App.scss';\nimport Nav from './components/Nav';\nimport Posts from './components/Posts';\nimport PostDetail from './components/PostDetail';\nimport AuthorDetail from './components/AuthorDetail';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    // Handling the routing for the whole application here\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Route path=\"/\" exact component={Posts} />\n        <Route path=\"/posts\" exact component={Posts} />\n        {/* For the routes whose path will be the id of the posts */}\n        <Route path=\"/posts/:id\" component={PostDetail} />\n        <Route path=\"/author/:id\" component={AuthorDetail} />\n      </div>\n\n    </Router>\n  );\n}\n\nconst Home = () => (\n  <div>\n    <h1>Home Page</h1>\n  </div>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}